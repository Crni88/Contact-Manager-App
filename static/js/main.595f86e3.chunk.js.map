{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContacts.js","components/layout/Header.js","components/Pages/About.js","components/Pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","className","name","onClick","style","cursor","float","color","bind","to","marginRight","email","phone","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContent","updateContact","match","params","put","Header","branding","href","About","NotFound","App","basename","process","exact","path","component","EditContact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.595f86e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      const res = await axios.delete(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n      );\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {\" \"}\r\n                {contact.name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                ></i>\r\n                <Link to={`contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"> Email: {contact.email}</li>{\" \"}\r\n                  <li className=\"list-group-item\">Phone: {contact.phone} </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {value.contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: \"\",\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContent extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clears state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: \"\",\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContent;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"#!\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i>Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\">About Contact Manager</h1>\r\n        <p className=\"lead\">Simple app made to manage contacts</p>\r\n        <p className=\"text-secondary\">Version 1.0.0</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\">404 Page Not Found</h1>\r\n        <p className=\"lead\">Sorry, that page does not exist</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport EditContact from \"./components/contacts/EditContacts\";\r\nimport Header from \"./components/layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"./context\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Contact from \"./components/contacts/Contact\";\r\nimport About from \"./components/Pages/About\";\r\nimport NotFound from \"./components/Pages/NotFound\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div className=\"App\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts}></Route>\r\n                <Route exact path=\"/about\" component={About}></Route>\r\n                <Route exact path=\"/contact/add\" component={AddContact}></Route>\r\n                <Route\r\n                  exact\r\n                  path=\"/contact/edit/:id\"\r\n                  component={EditContact}\r\n                ></Route>\r\n\r\n                <Route component={NotFound}></Route>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}